CREATE TABLE IF NOT EXISTS public.admins (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username character varying(255),
    password character varying(255)
);


ALTER TABLE IF EXISTS public.admins
    OWNER to postgres;
    
        -- Table: public.roles

-- DROP TABLE IF EXISTS public.roles;

CREATE TABLE IF NOT EXISTS public.roles (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rol character varying NOT NULL
);


ALTER TABLE IF EXISTS public.roles
    OWNER to postgres;

-- Table: public.admins_roles

-- DROP TABLE IF EXISTS public.admins_roles;

CREATE TABLE IF NOT EXISTS public.admins_roles (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Usar IDENTITY
    id_admin integer NOT NULL REFERENCES public.admins(id), -- FK a admins.id (que ahora es PK)
    id_role integer NOT NULL REFERENCES public.roles(id)    -- FK a roles.id (que ahora es PK)
);


ALTER TABLE IF EXISTS public.admins_roles
    OWNER to postgres;

    -- Table: public.companys

-- DROP TABLE IF EXISTS public.companys;

CREATE TABLE IF NOT EXISTS public.companys
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    company_name character varying(255) COLLATE pg_catalog."default",
    company_api_key uuid,
    id_admin integer,
    version bigint DEFAULT 0,
    CONSTRAINT companys_pkey PRIMARY KEY (id),
    CONSTRAINT companys_id_admin_fkey FOREIGN KEY (id_admin)
        REFERENCES public.admins (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


ALTER TABLE IF EXISTS public.companys
    OWNER to postgres;

    -- Table: public.locations

-- DROP TABLE IF EXISTS public.locations;

CREATE TABLE IF NOT EXISTS public.locations
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_company integer,
    location_name character varying(255) COLLATE pg_catalog."default",
    location_country character varying(255) COLLATE pg_catalog."default",
    location_city character varying(255) COLLATE pg_catalog."default",
    location_meta text COLLATE pg_catalog."default",
    CONSTRAINT locations_pkey PRIMARY KEY (id),
    CONSTRAINT locations_id_company_fkey FOREIGN KEY (id_company)
        REFERENCES public.companys (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

ALTER TABLE IF EXISTS public.locations
    OWNER to postgres;

 -- Table: public.sensors

-- DROP TABLE IF EXISTS public.sensors;

 CREATE TABLE IF NOT EXISTS public.sensors (
     id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Usar IDENTITY
     id_location integer REFERENCES public.locations(id),
     sensorname character varying(255),
     sensorcategory character varying(255),
     sensormeta text,
     sensorapikey uuid
 );


ALTER TABLE IF EXISTS public.sensors
    OWNER to postgres;

    -- Table: public.permisos

-- DROP TABLE IF EXISTS public.permisos;

CREATE TABLE IF NOT EXISTS public.permisos (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Usar IDENTITY
    permiso character varying NOT NULL
);


ALTER TABLE IF EXISTS public.permisos
    OWNER to postgres;



    -- Table: public.roles_permisos

-- DROP TABLE IF EXISTS public.roles_permisos;

CREATE TABLE IF NOT EXISTS public.roles_permisos (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Usar IDENTITY
    id_rol integer NOT NULL REFERENCES public.roles(id),      -- FK a roles.id
    id_permiso integer NOT NULL REFERENCES public.permisos(id) -- FK a permisos.id
);


ALTER TABLE IF EXISTS public.roles_permisos
    OWNER to postgres;

    -- Table: public.sensordatas

-- DROP TABLE IF EXISTS public.sensordatas;

CREATE TABLE IF NOT EXISTS public.sensordatas
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_sensor integer,
    fecha timestamp without time zone,
    CONSTRAINT sensordatas_pkey PRIMARY KEY (id),
    CONSTRAINT sensordatas_id_sensor_fkey FOREIGN KEY (id_sensor)
        REFERENCES public.sensors (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


ALTER TABLE IF EXISTS public.sensordatas
    OWNER to postgres;

    CREATE TABLE IF NOT EXISTS public.sensordatavalues
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    id_sensor_data integer,
    value character varying(255) COLLATE pg_catalog."default",
    variable character varying(255) COLLATE pg_catalog."default",
    fecha timestamp without time zone,
    CONSTRAINT sensordatavalues_pkey PRIMARY KEY (id),
    CONSTRAINT sensordatavalues_id_sensor_data_fkey FOREIGN KEY (id_sensor_data)
        REFERENCES public.sensordatas (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


ALTER TABLE IF EXISTS public.sensordatavalues
    OWNER to postgres;

   


insert into admins (id, username, password) values (1, 'admin', '$2a$12$zZNFtcdYap/6AY4YmlK/Q.1JmOtVlrCWA1JwPtyBLAsxbon0seKjS');
insert into roles (id, rol) values (1, 'ROLE_ADMINISTRADOR');
insert into admins_roles (id, id_admin, id_role) values (1, 1, 1);